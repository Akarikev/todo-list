// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  status      Status    @default(pending)
  author      User      @relation("author", fields: [authorId], references: [id])
  assignee    User      @relation("assignee", fields: [assigneeId], references: [id])
  completedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Comment     Comment[]
  authorId    Int
  assigneeId  Int
}

enum Status {
  pending
  inProgress
  done
}

model Comment {
  id        Int       @id @default(autoincrement())
  content   String
  taskId    Int
  task      Task      @relation(fields: [taskId], references: [id], onDelete: Cascade)
  authorId  Int
  author    User      @relation(fields: [authorId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  
  editedAt  DateTime?
  deletedAt DateTime?
}

model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  password    String
  superUser   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Comment     Comment[]
  Tasks       Task[]    @relation("author")
  Assignments Task[]    @relation("assignee")
}
